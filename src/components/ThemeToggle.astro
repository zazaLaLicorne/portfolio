---
---

<button
  id="theme-toggle"
  type="button"
  class="p-2 rounded-lg bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-all duration-300 shadow-sm hover:shadow-md"
  aria-label="Toggle theme"
>
  <svg 
    id="sun-icon" 
    class="w-5 h-5 text-yellow-500 hidden dark:block"
    fill="none" 
    stroke="currentColor" 
    viewBox="0 0 24 24"
  >
    <path 
      stroke-linecap="round" 
      stroke-linejoin="round" 
      stroke-width="2" 
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    />
  </svg>
  <svg 
    id="moon-icon" 
    class="w-5 h-5 text-blue-600 block dark:hidden"
    fill="none" 
    stroke="currentColor" 
    viewBox="0 0 24 24"
  >
    <path 
      stroke-linecap="round" 
      stroke-linejoin="round" 
      stroke-width="2" 
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    />
  </svg>
</button>

<script>
  // Fonction pour initialiser le thème
  function initTheme() {
    // Vérifier le localStorage ou utiliser 'light' par défaut
    const savedTheme = localStorage.getItem('theme');
    const theme = savedTheme || 'light';
    
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }

  // Initialiser immédiatement (avant DOMContentLoaded)
  initTheme();

  // Attacher l'événement au bouton
  function attachToggleListener() {
    const toggleButtons = document.querySelectorAll('#theme-toggle');
    
    toggleButtons.forEach(button => {
      button.addEventListener('click', () => {
        const isDark = document.documentElement.classList.contains('dark');
        
        if (isDark) {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('theme', 'light');
        } else {
          document.documentElement.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        }
      });
    });
  }

  // Attacher au chargement initial
  document.addEventListener('DOMContentLoaded', attachToggleListener);

  // Réattacher lors de la navigation Astro
  document.addEventListener('astro:page-load', () => {
    initTheme();
    attachToggleListener();
  });
</script>